(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{348:function(t,a,n){"use strict";n.r(a);var s=n(33),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mutable과-immutable-값과-mutating한-메서드와-non-mutating-한-메서드를-비교하시오"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mutable과-immutable-값과-mutating한-메서드와-non-mutating-한-메서드를-비교하시오"}},[t._v("#")]),t._v(" mutable과 immutable 값과 mutating한 메서드와 non-mutating 한 메서드를 비교하시오.")]),t._v(" "),n("blockquote",[n("p",[t._v("This is a translation of 30-Seconds-of-knowledge's "),n("a",{attrs:{href:"https://github.com/30-seconds/30-seconds-of-interviews/blob/master/questions/mutable-vs-immutable.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Contrast mutable and immutable values, and mutating vs non-mutating methods."),n("OutboundLink")],1),t._v(" in korean.")])]),t._v(" "),n("p",[t._v("두 용어를 비교하면 아래와 같다:")]),t._v(" "),n("ul",[n("li",[t._v("Mutable: 변경되기 쉬움")]),t._v(" "),n("li",[t._v("Immutable: 변경되지 않음")])]),t._v(" "),n("p",[t._v("자바스크립트에서 primitive 값들은 immutable한 반면 객체는 mutable 하다. 즉 primitive한 값에 수행된 연산은 원래의 값을 바꿀 수 없지만, 객체에 수행된 연산은 어떤 식으로든 기존의 참조를 바꿀 수 있다는 것을 의미한다.")]),t._v(" "),n("p",[n("code",[t._v("String.prototype")]),t._v("의 모든 메서드는 기존의 string에 영향을 미치지 않고 새로운 string을 return 한다. 반면 "),n("code",[t._v("Array.prototype")]),t._v("의 메서드들은 기존 array의 참조를 변경하지 않고 새로운 array를 생성하기도 하는 메서드들이 있고(non-mutating), 그렇지 않고 기존 array을 그대로 변경하는 메서드들도 있다.(mutating)")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyString"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 새로운 string을 return함. 기존의 값은 전혀 바꾸지 않음.")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" originalArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noriginalArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// originalArray를 그대로 변경하여 이 객체의 값이 [1, 2, 3, 4]가 되었음.")]),t._v("\noriginalArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 새로운 array를 return 함. 기존의 array는 전혀 변경하지 않음.")]),t._v("\n")])])]),n("h2",{attrs:{id:"알아두면-좋은-것"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#알아두면-좋은-것"}},[t._v("#")]),t._v(" 알아두면 좋은 것")]),t._v(" "),n("ul",[n("li",[t._v("array의 mutating한 메서드와 non-mutating한 메서드의 종류들")])]),t._v(" "),n("h2",{attrs:{id:"참고-링크"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#참고-링크"}},[t._v("#")]),t._v(" 참고 링크")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://lorenstewart.me/2017/01/22/javascript-array-methods-mutating-vs-non-mutating/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mutating vs non-mutating array methods"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);