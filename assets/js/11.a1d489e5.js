(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{331:function(t,s,n){"use strict";n.r(s);var a=n(33),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"react-component-class에서-메서드의-this-context가-올바른지-어떻게-확인할까요"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-component-class에서-메서드의-this-context가-올바른지-어떻게-확인할까요"}},[t._v("#")]),t._v(" React component class에서 메서드의 "),n("code",[t._v("this")]),t._v(" context가 올바른지 어떻게 확인할까요?")]),t._v(" "),n("blockquote",[n("p",[t._v("This is a translation of 30-Seconds-of-knowledge's "),n("a",{attrs:{href:"https://github.com/30-seconds/30-seconds-of-interviews/blob/master/questions/methods-context-react-classes.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("How do you ensure methods have the correct this context in React component classes?"),n("OutboundLink")],1),t._v(" in korean.")])]),t._v(" "),n("p",[t._v("자바스크립트 클래스에서 기본적으로 메서드는 바인딩 되지 않는다. 이것은 "),n("code",[t._v("this")]),t._v("가 바뀔 수 있다는 것을 의미하고(event handler의 경우 event를 listening하고 있는 element로 변경됨), component instance를 참조하지 않는다는 것을 의미한다. 이 문제를 해결하기 위해서는 "),n("code",[t._v("Function.prototype.bind()")]),t._v("를 사용해서 "),n("code",[t._v("this")]),t._v("가 component instance를 참조하도록 강제로 변경해야한다.")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleClick "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 어떤 로직을 수행")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[n("code",[t._v("bind")]),t._v("는 보기 안좋아보일 수 있고, "),n("code",[t._v("constructor")]),t._v("에서 정의되어야하기 떄문에 새로운 public class 필드 구문이 주로 선호된다:")])]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleClick")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is: '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleClick"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            Click me\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("위 방법 외에도 컴포넌트에 inline arrow function은 정적인(lexical) "),n("code",[t._v("this")]),t._v("가 보존되기 때문에 아래와 같이 사용할 수도 있다:")])]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Click me"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("p",[t._v("하지만 이 방법을 사용할 경우 render때 마다 새로운 함수 참조를 생성해서 컴포넌트로 넘겨줘야하므로 불필요한 re-rendering이 발생할 수 있다는 것을 명심해야한다. "),n("code",[t._v("shouldComponentUpdate")]),t._v(" 또는 "),n("code",[t._v("PureComponent")]),t._v("를 사용해 얕은 동등성 비교로 불필요한 re-render를 막을 수 있다. 만약 성능이 중요하다면 function 참조가 일정하게 유지되는 constructor "),n("code",[t._v("bind")]),t._v(" 사용방법이나, public class 필드 구문을 사용하는 방법이 좋다.")]),t._v(" "),n("h2",{attrs:{id:"알아두면-좋은-것"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#알아두면-좋은-것"}},[t._v("#")]),t._v(" 알아두면 좋은 것")]),t._v(" "),n("ul",[n("li",[t._v("component 생성자의 instance context에 메서드를 bind하거나, public class 필드 구문을 사용하거나, inline arrow function을 사용할 수 있다.")])]),t._v(" "),n("h2",{attrs:{id:"참고-링크"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#참고-링크"}},[t._v("#")]),t._v(" 참고 링크")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://reactjs.org/docs/handling-events.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("React docs on Handling Events"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://reactjs.org/docs/faq-functions.html#how-do-i-bind-a-function-to-a-component-instance",target:"_blank",rel:"noopener noreferrer"}},[t._v("React docs on Passing Functions to Components"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);