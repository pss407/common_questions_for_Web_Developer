(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{326:function(t,r,e){"use strict";e.r(r);var _=e(33),s=Object(_.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"dfs-bfs를-통한-트리탐색방법-중-본인이-경험-사용-했던-방식은-무엇이고-동작원리를-짧게-설명해보세요"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dfs-bfs를-통한-트리탐색방법-중-본인이-경험-사용-했던-방식은-무엇이고-동작원리를-짧게-설명해보세요"}},[t._v("#")]),t._v(" DFS, BFS를 통한 트리탐색방법 중 본인이 경험(사용)했던 방식은 무엇이고, 동작원리를 짧게 설명해보세요.")]),t._v(" "),e("p",[t._v("DFS와 BFS는 그래프를 탐색하는 데 사용하는 방법으로, 그래프에 어떤 노드들이 있는지 알고 싶을 때 사용한다."),e("br"),t._v("\nDFS는 노드의 자식들을 먼저 탐색하고, BFS노드의 형제들을 먼저 탐색한다.")]),t._v(" "),e("h2",{attrs:{id:"dfs-depth-first-search"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dfs-depth-first-search"}},[t._v("#")]),t._v(" DFS(Depth First Search)")]),t._v(" "),e("p",[t._v("DFS는 대부분 "),e("code",[t._v("Stack")]),t._v("이나 "),e("code",[t._v("Recursion")]),t._v("을 사용해 구현한다."),e("br"),t._v(" "),e("img",{attrs:{src:"https://cdn.filepicker.io/api/file/FXAmj6SjTYSMalugzkQw",alt:"dfs"}})]),t._v(" "),e("ol",[e("li",[t._v("A 탐색")]),t._v(" "),e("li",[t._v("A의 자식인 X 탐색")]),t._v(" "),e("li",[t._v("X의 자식인 G, H를 스택에 넣고 H를 탐색")]),t._v(" "),e("li",[t._v("H의 자식인 E, P(G는 이미 들어가있기 때문에 안넣음)를 스택에 넣고 P 탐색")]),t._v(" "),e("li",[t._v("P의 자식이 없으므로 E 탐색")]),t._v(" "),e("li",[t._v("E의 자식인 M, Y를 넣고 Y 탐색")]),t._v(" "),e("li",[t._v("Y의 자식이 없으므로 M 탐색")]),t._v(" "),e("li",[t._v("M의 자식인 J 탐색")]),t._v(" "),e("li",[t._v("마지막으로 스택에 남은 G탐색")])]),t._v(" "),e("p",[t._v("트리형태가 아니라 그래프형태라 조금 헷갈리지만, 최단 거리로 두고 생각하면 트리와 비슷하다. 최단거리가 같은 형태라면 아무렇게나 부모를 설정해도 되는데, 이 예제에서는 P를 G가 아닌 H의 자식으로 두었기 때문에 그림은 그렇게 표시했다."),e("br"),t._v(" "),e("img",{attrs:{src:"https://user-images.githubusercontent.com/42017052/72154114-1c1db580-33f3-11ea-9d80-76a9beac058d.png",alt:"image"}})]),t._v(" "),e("h2",{attrs:{id:"bfs-breadth-first-search"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfs-breadth-first-search"}},[t._v("#")]),t._v(" BFS(Breadth First Search)")]),t._v(" "),e("p",[t._v("BFS는 대부분 "),e("code",[t._v("Queue")]),t._v("를 이용해 구현한다."),e("br"),t._v(" "),e("img",{attrs:{src:"https://cdn.filepicker.io/api/file/6sBaBZQVuci45KJTlGQ9",alt:"bfs"}})]),t._v(" "),e("ol",[e("li",[t._v("A 탐색")]),t._v(" "),e("li",[t._v("A의 자식인 X 탐색")]),t._v(" "),e("li",[t._v("X의 자식인 G 탐색")]),t._v(" "),e("li",[t._v("G의 형제인 H 탐색")]),t._v(" "),e("li",[t._v("H의 자식인 P 탐색")]),t._v(" "),e("li",[t._v("P의 형제인 E 탐색")]),t._v(" "),e("li",[t._v("E의 자식인 M 탐색")]),t._v(" "),e("li",[t._v("M의 형제인 Y 탐색")]),t._v(" "),e("li",[t._v("M의 자식인 J 탐색")])]),t._v(" "),e("h2",{attrs:{id:"참조"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#참조"}},[t._v("#")]),t._v(" 참조")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.zerocho.com/category/Algorithm/post/5870153c37e1c80018b64eb0",target:"_blank",rel:"noopener noreferrer"}},[t._v("Zerocho_그래프 탐색"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=s.exports}}]);